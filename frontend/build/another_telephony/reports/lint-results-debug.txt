/Users/jainambarbhaya/.pub-cache/hosted/pub.dev/another_telephony-0.3.0/android/src/main/kotlin/com/shounakmulay/telephony/TelephonyPlugin.kt:28: Warning: Do not use @NonNull in Kotlin; the nullability is already implied by the Kotlin type FlutterPlugin.FlutterPluginBinding not ending with ? [KotlinNullnessAnnotation]
  override fun onAttachedToEngine(@NonNull flutterPluginBinding: FlutterPlugin.FlutterPluginBinding) {
                                  ~~~~~~~~
/Users/jainambarbhaya/.pub-cache/hosted/pub.dev/another_telephony-0.3.0/android/src/main/kotlin/com/shounakmulay/telephony/TelephonyPlugin.kt:36: Warning: Do not use @NonNull in Kotlin; the nullability is already implied by the Kotlin type FlutterPlugin.FlutterPluginBinding not ending with ? [KotlinNullnessAnnotation]
  override fun onDetachedFromEngine(@NonNull binding: FlutterPlugin.FlutterPluginBinding) {
                                    ~~~~~~~~

   Explanation for issues of type "KotlinNullnessAnnotation":
   In Kotlin, nullness is part of the type system; s: String is never null and
   s: String? is sometimes null, whether or not you add in additional
   annotations stating @NonNull or @Nullable. These are likely copy/paste
   mistakes, and are misleading.

/Users/jainambarbhaya/.pub-cache/hosted/pub.dev/another_telephony-0.3.0/android/build.gradle:12: Warning: A newer version of com.android.tools.build:gradle than 7.1.2 is available: 8.7.3. (There is also a newer version of 7.1.ùë• available, if upgrading to 8.7.3 is difficult: 7.1.3) [AndroidGradlePluginVersion]
        classpath "com.android.tools.build:gradle:7.1.2"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "AndroidGradlePluginVersion":
   This detector looks for usage of the Android Gradle Plugin where the
   version you are using is not the current stable release. Using older
   versions is fine, and there are cases where you deliberately want to stick
   with an older version. However, you may simply not be aware that a more
   recent version is available, and that is what this lint check helps find.

/Users/jainambarbhaya/.pub-cache/hosted/pub.dev/another_telephony-0.3.0/android/build.gradle:46: Warning: A newer version of org.jetbrains.kotlin:kotlin-stdlib-jdk7 than 1.8.20 is available: 2.0.20 [GradleDependency]
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/jainambarbhaya/.pub-cache/hosted/pub.dev/another_telephony-0.3.0/android/build.gradle:47: Warning: A newer version of androidx.annotation:annotation than 1.3.0 is available: 1.9.1 [GradleDependency]
    implementation 'androidx.annotation:annotation:1.3.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

/Users/jainambarbhaya/.pub-cache/hosted/pub.dev/another_telephony-0.3.0/android/src/main/kotlin/com/shounakmulay/telephony/sms/SmsMethodCallHandler.kt:200: Warning: this is missing RECEIVER_EXPORTED or RECEIVER_NOT_EXPORTED flag for unprotected broadcasts registered for plugins.shounakmulay.intent.ACTION_SMS_SENT, plugins.shounakmulay.intent.ACTION_SMS_DELIVERED [UnspecifiedRegisterReceiverFlag]
      context.applicationContext.registerReceiver(this, intentFilter)
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UnspecifiedRegisterReceiverFlag":
   A future platform release will require all receivers registering for
   non-system broadcasts to include a flag indicating the receiver's exported
   state. Apps registering for non-system broadcasts should use the
   ContextCompat#registerReceiver APIs with flags set to either
   RECEIVER_EXPORTED or RECEIVER_NOT_EXPORTED.

   If you are not expecting broadcasts from other apps on the device, register
   your receiver with RECEIVER_NOT_EXPORTED to protect your receiver on all
   platform releases.

   https://developer.android.com/reference/androidx/core/content/ContextCompat#registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,int)

/Users/jainambarbhaya/.pub-cache/hosted/pub.dev/another_telephony-0.3.0/android/src/main/kotlin/com/shounakmulay/telephony/PermissionsController.kt:27: Warning: Unnecessary; SDK_INT is never < 23 [ObsoleteSdkInt]
    return Build.VERSION.SDK_INT < Build.VERSION_CODES.M || context.checkSelfPermission(permission) == PERMISSION_GRANTED
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/jainambarbhaya/.pub-cache/hosted/pub.dev/another_telephony-0.3.0/android/src/main/kotlin/com/shounakmulay/telephony/PermissionsController.kt:30: Warning: Unnecessary; SDK_INT is always >= 23 [ObsoleteSdkInt]
  @RequiresApi(Build.VERSION_CODES.M)
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/jainambarbhaya/.pub-cache/hosted/pub.dev/another_telephony-0.3.0/android/src/main/kotlin/com/shounakmulay/telephony/sms/SmsMethodCallHandler.kt:285: Warning: Unnecessary; SDK_INT is never < 23 [ObsoleteSdkInt]
    if (Build.VERSION.SDK_INT < Build.VERSION_CODES.M || checkOrRequestPermission(smsAction, requestCode)) {
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/jainambarbhaya/.pub-cache/hosted/pub.dev/another_telephony-0.3.0/android/src/main/kotlin/com/shounakmulay/telephony/sms/SmsMethodCallHandler.kt:293: Warning: Unnecessary; SDK_INT is always >= 23 [ObsoleteSdkInt]
  @RequiresApi(Build.VERSION_CODES.M)
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/jainambarbhaya/.pub-cache/hosted/pub.dev/another_telephony-0.3.0/android/src/main/kotlin/com/shounakmulay/telephony/sms/SmsMethodCallHandler.kt:347: Warning: Unnecessary; SDK_INT is always >= 23 [ObsoleteSdkInt]
  @RequiresApi(Build.VERSION_CODES.M)
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "ObsoleteSdkInt":
   This check flags version checks that are not necessary, because the
   minSdkVersion (or surrounding known API level) is already at least as high
   as the version checked for.

   Similarly, it also looks for resources in -vNN folders, such as values-v14
   where the version qualifier is less than or equal to the minSdkVersion,
   where the contents should be merged into the best folder.

0 errors, 11 warnings
